#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WEBD3000Assn1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="pubs")]
	public partial class pubs_LINQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttitle(title instance);
    partial void Updatetitle(title instance);
    partial void Deletetitle(title instance);
    partial void Insertauthor(author instance);
    partial void Updateauthor(author instance);
    partial void Deleteauthor(author instance);
    partial void Insertemployee(employee instance);
    partial void Updateemployee(employee instance);
    partial void Deleteemployee(employee instance);
    partial void Insertjob(job instance);
    partial void Updatejob(job instance);
    partial void Deletejob(job instance);
    partial void Insertpub_info(pub_info instance);
    partial void Updatepub_info(pub_info instance);
    partial void Deletepub_info(pub_info instance);
    partial void Insertpublisher(publisher instance);
    partial void Updatepublisher(publisher instance);
    partial void Deletepublisher(publisher instance);
    partial void Insertsale(sale instance);
    partial void Updatesale(sale instance);
    partial void Deletesale(sale instance);
    partial void Insertstore(store instance);
    partial void Updatestore(store instance);
    partial void Deletestore(store instance);
    partial void Inserttitleauthor(titleauthor instance);
    partial void Updatetitleauthor(titleauthor instance);
    partial void Deletetitleauthor(titleauthor instance);
    #endregion
		
		public pubs_LINQDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["pubsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public pubs_LINQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public pubs_LINQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public pubs_LINQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public pubs_LINQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<title> titles
		{
			get
			{
				return this.GetTable<title>();
			}
		}
		
		public System.Data.Linq.Table<author> authors
		{
			get
			{
				return this.GetTable<author>();
			}
		}
		
		public System.Data.Linq.Table<discount> discounts
		{
			get
			{
				return this.GetTable<discount>();
			}
		}
		
		public System.Data.Linq.Table<employee> employees
		{
			get
			{
				return this.GetTable<employee>();
			}
		}
		
		public System.Data.Linq.Table<job> jobs
		{
			get
			{
				return this.GetTable<job>();
			}
		}
		
		public System.Data.Linq.Table<pub_info> pub_infos
		{
			get
			{
				return this.GetTable<pub_info>();
			}
		}
		
		public System.Data.Linq.Table<publisher> publishers
		{
			get
			{
				return this.GetTable<publisher>();
			}
		}
		
		public System.Data.Linq.Table<roysched> royscheds
		{
			get
			{
				return this.GetTable<roysched>();
			}
		}
		
		public System.Data.Linq.Table<sale> sales
		{
			get
			{
				return this.GetTable<sale>();
			}
		}
		
		public System.Data.Linq.Table<store> stores
		{
			get
			{
				return this.GetTable<store>();
			}
		}
		
		public System.Data.Linq.Table<titleauthor> titleauthors
		{
			get
			{
				return this.GetTable<titleauthor>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.titles")]
	public partial class title : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _title_id;
		
		private string _title1;
		
		private string _type;
		
		private string _pub_id;
		
		private System.Nullable<decimal> _price;
		
		private System.Nullable<decimal> _advance;
		
		private System.Nullable<int> _royalty;
		
		private System.Nullable<int> _ytd_sales;
		
		private string _notes;
		
		private System.DateTime _pubdate;
		
		private EntitySet<sale> _sales;
		
		private EntitySet<titleauthor> _titleauthors;
		
		private EntityRef<publisher> _publisher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontitle_idChanging(string value);
    partial void Ontitle_idChanged();
    partial void Ontitle1Changing(string value);
    partial void Ontitle1Changed();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void Onpub_idChanging(string value);
    partial void Onpub_idChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void OnadvanceChanging(System.Nullable<decimal> value);
    partial void OnadvanceChanged();
    partial void OnroyaltyChanging(System.Nullable<int> value);
    partial void OnroyaltyChanged();
    partial void Onytd_salesChanging(System.Nullable<int> value);
    partial void Onytd_salesChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void OnpubdateChanging(System.DateTime value);
    partial void OnpubdateChanged();
    #endregion
		
		public title()
		{
			this._sales = new EntitySet<sale>(new Action<sale>(this.attach_sales), new Action<sale>(this.detach_sales));
			this._titleauthors = new EntitySet<titleauthor>(new Action<titleauthor>(this.attach_titleauthors), new Action<titleauthor>(this.detach_titleauthors));
			this._publisher = default(EntityRef<publisher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title_id", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string title_id
		{
			get
			{
				return this._title_id;
			}
			set
			{
				if ((this._title_id != value))
				{
					this.Ontitle_idChanging(value);
					this.SendPropertyChanging();
					this._title_id = value;
					this.SendPropertyChanged("title_id");
					this.Ontitle_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="title", Storage="_title1", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string title1
		{
			get
			{
				return this._title1;
			}
			set
			{
				if ((this._title1 != value))
				{
					this.Ontitle1Changing(value);
					this.SendPropertyChanging();
					this._title1 = value;
					this.SendPropertyChanged("title1");
					this.Ontitle1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pub_id", DbType="Char(4)")]
		public string pub_id
		{
			get
			{
				return this._pub_id;
			}
			set
			{
				if ((this._pub_id != value))
				{
					if (this._publisher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpub_idChanging(value);
					this.SendPropertyChanging();
					this._pub_id = value;
					this.SendPropertyChanged("pub_id");
					this.Onpub_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Money")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_advance", DbType="Money")]
		public System.Nullable<decimal> advance
		{
			get
			{
				return this._advance;
			}
			set
			{
				if ((this._advance != value))
				{
					this.OnadvanceChanging(value);
					this.SendPropertyChanging();
					this._advance = value;
					this.SendPropertyChanged("advance");
					this.OnadvanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_royalty", DbType="Int")]
		public System.Nullable<int> royalty
		{
			get
			{
				return this._royalty;
			}
			set
			{
				if ((this._royalty != value))
				{
					this.OnroyaltyChanging(value);
					this.SendPropertyChanging();
					this._royalty = value;
					this.SendPropertyChanged("royalty");
					this.OnroyaltyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ytd_sales", DbType="Int")]
		public System.Nullable<int> ytd_sales
		{
			get
			{
				return this._ytd_sales;
			}
			set
			{
				if ((this._ytd_sales != value))
				{
					this.Onytd_salesChanging(value);
					this.SendPropertyChanging();
					this._ytd_sales = value;
					this.SendPropertyChanged("ytd_sales");
					this.Onytd_salesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="VarChar(200)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pubdate", DbType="DateTime NOT NULL")]
		public System.DateTime pubdate
		{
			get
			{
				return this._pubdate;
			}
			set
			{
				if ((this._pubdate != value))
				{
					this.OnpubdateChanging(value);
					this.SendPropertyChanging();
					this._pubdate = value;
					this.SendPropertyChanged("pubdate");
					this.OnpubdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="title_sale", Storage="_sales", ThisKey="title_id", OtherKey="title_id")]
		public EntitySet<sale> sales
		{
			get
			{
				return this._sales;
			}
			set
			{
				this._sales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="title_titleauthor", Storage="_titleauthors", ThisKey="title_id", OtherKey="title_id")]
		public EntitySet<titleauthor> titleauthors
		{
			get
			{
				return this._titleauthors;
			}
			set
			{
				this._titleauthors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="publisher_title", Storage="_publisher", ThisKey="pub_id", OtherKey="pub_id", IsForeignKey=true)]
		public publisher publisher
		{
			get
			{
				return this._publisher.Entity;
			}
			set
			{
				publisher previousValue = this._publisher.Entity;
				if (((previousValue != value) 
							|| (this._publisher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._publisher.Entity = null;
						previousValue.titles.Remove(this);
					}
					this._publisher.Entity = value;
					if ((value != null))
					{
						value.titles.Add(this);
						this._pub_id = value.pub_id;
					}
					else
					{
						this._pub_id = default(string);
					}
					this.SendPropertyChanged("publisher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_sales(sale entity)
		{
			this.SendPropertyChanging();
			entity.title = this;
		}
		
		private void detach_sales(sale entity)
		{
			this.SendPropertyChanging();
			entity.title = null;
		}
		
		private void attach_titleauthors(titleauthor entity)
		{
			this.SendPropertyChanging();
			entity.title = this;
		}
		
		private void detach_titleauthors(titleauthor entity)
		{
			this.SendPropertyChanging();
			entity.title = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.authors")]
	public partial class author : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _au_id;
		
		private string _au_lname;
		
		private string _au_fname;
		
		private string _phone;
		
		private string _address;
		
		private string _city;
		
		private string _state;
		
		private string _zip;
		
		private bool _contract;
		
		private EntitySet<titleauthor> _titleauthors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onau_idChanging(string value);
    partial void Onau_idChanged();
    partial void Onau_lnameChanging(string value);
    partial void Onau_lnameChanged();
    partial void Onau_fnameChanging(string value);
    partial void Onau_fnameChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OnzipChanging(string value);
    partial void OnzipChanged();
    partial void OncontractChanging(bool value);
    partial void OncontractChanged();
    #endregion
		
		public author()
		{
			this._titleauthors = new EntitySet<titleauthor>(new Action<titleauthor>(this.attach_titleauthors), new Action<titleauthor>(this.detach_titleauthors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_au_id", DbType="VarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string au_id
		{
			get
			{
				return this._au_id;
			}
			set
			{
				if ((this._au_id != value))
				{
					this.Onau_idChanging(value);
					this.SendPropertyChanging();
					this._au_id = value;
					this.SendPropertyChanged("au_id");
					this.Onau_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_au_lname", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string au_lname
		{
			get
			{
				return this._au_lname;
			}
			set
			{
				if ((this._au_lname != value))
				{
					this.Onau_lnameChanging(value);
					this.SendPropertyChanging();
					this._au_lname = value;
					this.SendPropertyChanged("au_lname");
					this.Onau_lnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_au_fname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string au_fname
		{
			get
			{
				return this._au_fname;
			}
			set
			{
				if ((this._au_fname != value))
				{
					this.Onau_fnameChanging(value);
					this.SendPropertyChanging();
					this._au_fname = value;
					this.SendPropertyChanged("au_fname");
					this.Onau_fnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(40)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(20)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="Char(2)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zip", DbType="Char(5)")]
		public string zip
		{
			get
			{
				return this._zip;
			}
			set
			{
				if ((this._zip != value))
				{
					this.OnzipChanging(value);
					this.SendPropertyChanging();
					this._zip = value;
					this.SendPropertyChanged("zip");
					this.OnzipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contract", DbType="Bit NOT NULL")]
		public bool contract
		{
			get
			{
				return this._contract;
			}
			set
			{
				if ((this._contract != value))
				{
					this.OncontractChanging(value);
					this.SendPropertyChanging();
					this._contract = value;
					this.SendPropertyChanged("contract");
					this.OncontractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="author_titleauthor", Storage="_titleauthors", ThisKey="au_id", OtherKey="au_id")]
		public EntitySet<titleauthor> titleauthors
		{
			get
			{
				return this._titleauthors;
			}
			set
			{
				this._titleauthors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_titleauthors(titleauthor entity)
		{
			this.SendPropertyChanging();
			entity.author = this;
		}
		
		private void detach_titleauthors(titleauthor entity)
		{
			this.SendPropertyChanging();
			entity.author = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.discounts")]
	public partial class discount
	{
		
		private string _discounttype;
		
		private string _stor_id;
		
		private System.Nullable<short> _lowqty;
		
		private System.Nullable<short> _highqty;
		
		private decimal _discount1;
		
		public discount()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discounttype", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string discounttype
		{
			get
			{
				return this._discounttype;
			}
			set
			{
				if ((this._discounttype != value))
				{
					this._discounttype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stor_id", DbType="Char(4)")]
		public string stor_id
		{
			get
			{
				return this._stor_id;
			}
			set
			{
				if ((this._stor_id != value))
				{
					this._stor_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lowqty", DbType="SmallInt")]
		public System.Nullable<short> lowqty
		{
			get
			{
				return this._lowqty;
			}
			set
			{
				if ((this._lowqty != value))
				{
					this._lowqty = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_highqty", DbType="SmallInt")]
		public System.Nullable<short> highqty
		{
			get
			{
				return this._highqty;
			}
			set
			{
				if ((this._highqty != value))
				{
					this._highqty = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="discount", Storage="_discount1", DbType="Decimal(4,2) NOT NULL")]
		public decimal discount1
		{
			get
			{
				return this._discount1;
			}
			set
			{
				if ((this._discount1 != value))
				{
					this._discount1 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.employee")]
	public partial class employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _emp_id;
		
		private string _fname;
		
		private System.Nullable<char> _minit;
		
		private string _lname;
		
		private short _job_id;
		
		private System.Nullable<byte> _job_lvl;
		
		private string _pub_id;
		
		private System.DateTime _hire_date;
		
		private EntityRef<job> _job;
		
		private EntityRef<publisher> _publisher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onemp_idChanging(string value);
    partial void Onemp_idChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnminitChanging(System.Nullable<char> value);
    partial void OnminitChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void Onjob_idChanging(short value);
    partial void Onjob_idChanged();
    partial void Onjob_lvlChanging(System.Nullable<byte> value);
    partial void Onjob_lvlChanged();
    partial void Onpub_idChanging(string value);
    partial void Onpub_idChanged();
    partial void Onhire_dateChanging(System.DateTime value);
    partial void Onhire_dateChanged();
    #endregion
		
		public employee()
		{
			this._job = default(EntityRef<job>);
			this._publisher = default(EntityRef<publisher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_id", DbType="Char(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string emp_id
		{
			get
			{
				return this._emp_id;
			}
			set
			{
				if ((this._emp_id != value))
				{
					this.Onemp_idChanging(value);
					this.SendPropertyChanging();
					this._emp_id = value;
					this.SendPropertyChanged("emp_id");
					this.Onemp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minit", DbType="Char(1)")]
		public System.Nullable<char> minit
		{
			get
			{
				return this._minit;
			}
			set
			{
				if ((this._minit != value))
				{
					this.OnminitChanging(value);
					this.SendPropertyChanging();
					this._minit = value;
					this.SendPropertyChanged("minit");
					this.OnminitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job_id", DbType="SmallInt NOT NULL")]
		public short job_id
		{
			get
			{
				return this._job_id;
			}
			set
			{
				if ((this._job_id != value))
				{
					if (this._job.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onjob_idChanging(value);
					this.SendPropertyChanging();
					this._job_id = value;
					this.SendPropertyChanged("job_id");
					this.Onjob_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job_lvl", DbType="TinyInt")]
		public System.Nullable<byte> job_lvl
		{
			get
			{
				return this._job_lvl;
			}
			set
			{
				if ((this._job_lvl != value))
				{
					this.Onjob_lvlChanging(value);
					this.SendPropertyChanging();
					this._job_lvl = value;
					this.SendPropertyChanged("job_lvl");
					this.Onjob_lvlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pub_id", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string pub_id
		{
			get
			{
				return this._pub_id;
			}
			set
			{
				if ((this._pub_id != value))
				{
					if (this._publisher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpub_idChanging(value);
					this.SendPropertyChanging();
					this._pub_id = value;
					this.SendPropertyChanged("pub_id");
					this.Onpub_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hire_date", DbType="DateTime NOT NULL")]
		public System.DateTime hire_date
		{
			get
			{
				return this._hire_date;
			}
			set
			{
				if ((this._hire_date != value))
				{
					this.Onhire_dateChanging(value);
					this.SendPropertyChanging();
					this._hire_date = value;
					this.SendPropertyChanged("hire_date");
					this.Onhire_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="job_employee", Storage="_job", ThisKey="job_id", OtherKey="job_id", IsForeignKey=true)]
		public job job
		{
			get
			{
				return this._job.Entity;
			}
			set
			{
				job previousValue = this._job.Entity;
				if (((previousValue != value) 
							|| (this._job.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._job.Entity = null;
						previousValue.employees.Remove(this);
					}
					this._job.Entity = value;
					if ((value != null))
					{
						value.employees.Add(this);
						this._job_id = value.job_id;
					}
					else
					{
						this._job_id = default(short);
					}
					this.SendPropertyChanged("job");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="publisher_employee", Storage="_publisher", ThisKey="pub_id", OtherKey="pub_id", IsForeignKey=true)]
		public publisher publisher
		{
			get
			{
				return this._publisher.Entity;
			}
			set
			{
				publisher previousValue = this._publisher.Entity;
				if (((previousValue != value) 
							|| (this._publisher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._publisher.Entity = null;
						previousValue.employees.Remove(this);
					}
					this._publisher.Entity = value;
					if ((value != null))
					{
						value.employees.Add(this);
						this._pub_id = value.pub_id;
					}
					else
					{
						this._pub_id = default(string);
					}
					this.SendPropertyChanged("publisher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.jobs")]
	public partial class job : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _job_id;
		
		private string _job_desc;
		
		private byte _min_lvl;
		
		private byte _max_lvl;
		
		private EntitySet<employee> _employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onjob_idChanging(short value);
    partial void Onjob_idChanged();
    partial void Onjob_descChanging(string value);
    partial void Onjob_descChanged();
    partial void Onmin_lvlChanging(byte value);
    partial void Onmin_lvlChanged();
    partial void Onmax_lvlChanging(byte value);
    partial void Onmax_lvlChanged();
    #endregion
		
		public job()
		{
			this._employees = new EntitySet<employee>(new Action<employee>(this.attach_employees), new Action<employee>(this.detach_employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job_id", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short job_id
		{
			get
			{
				return this._job_id;
			}
			set
			{
				if ((this._job_id != value))
				{
					this.Onjob_idChanging(value);
					this.SendPropertyChanging();
					this._job_id = value;
					this.SendPropertyChanged("job_id");
					this.Onjob_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job_desc", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string job_desc
		{
			get
			{
				return this._job_desc;
			}
			set
			{
				if ((this._job_desc != value))
				{
					this.Onjob_descChanging(value);
					this.SendPropertyChanging();
					this._job_desc = value;
					this.SendPropertyChanged("job_desc");
					this.Onjob_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_min_lvl", DbType="TinyInt NOT NULL")]
		public byte min_lvl
		{
			get
			{
				return this._min_lvl;
			}
			set
			{
				if ((this._min_lvl != value))
				{
					this.Onmin_lvlChanging(value);
					this.SendPropertyChanging();
					this._min_lvl = value;
					this.SendPropertyChanged("min_lvl");
					this.Onmin_lvlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max_lvl", DbType="TinyInt NOT NULL")]
		public byte max_lvl
		{
			get
			{
				return this._max_lvl;
			}
			set
			{
				if ((this._max_lvl != value))
				{
					this.Onmax_lvlChanging(value);
					this.SendPropertyChanging();
					this._max_lvl = value;
					this.SendPropertyChanged("max_lvl");
					this.Onmax_lvlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="job_employee", Storage="_employees", ThisKey="job_id", OtherKey="job_id")]
		public EntitySet<employee> employees
		{
			get
			{
				return this._employees;
			}
			set
			{
				this._employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.job = this;
		}
		
		private void detach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.job = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pub_info")]
	public partial class pub_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _pub_id;
		
		private System.Data.Linq.Binary _logo;
		
		private string _pr_info;
		
		private EntityRef<publisher> _publisher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpub_idChanging(string value);
    partial void Onpub_idChanged();
    partial void OnlogoChanging(System.Data.Linq.Binary value);
    partial void OnlogoChanged();
    partial void Onpr_infoChanging(string value);
    partial void Onpr_infoChanged();
    #endregion
		
		public pub_info()
		{
			this._publisher = default(EntityRef<publisher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pub_id", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string pub_id
		{
			get
			{
				return this._pub_id;
			}
			set
			{
				if ((this._pub_id != value))
				{
					if (this._publisher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpub_idChanging(value);
					this.SendPropertyChanging();
					this._pub_id = value;
					this.SendPropertyChanged("pub_id");
					this.Onpub_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary logo
		{
			get
			{
				return this._logo;
			}
			set
			{
				if ((this._logo != value))
				{
					this.OnlogoChanging(value);
					this.SendPropertyChanging();
					this._logo = value;
					this.SendPropertyChanged("logo");
					this.OnlogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pr_info", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string pr_info
		{
			get
			{
				return this._pr_info;
			}
			set
			{
				if ((this._pr_info != value))
				{
					this.Onpr_infoChanging(value);
					this.SendPropertyChanging();
					this._pr_info = value;
					this.SendPropertyChanged("pr_info");
					this.Onpr_infoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="publisher_pub_info", Storage="_publisher", ThisKey="pub_id", OtherKey="pub_id", IsForeignKey=true)]
		public publisher publisher
		{
			get
			{
				return this._publisher.Entity;
			}
			set
			{
				publisher previousValue = this._publisher.Entity;
				if (((previousValue != value) 
							|| (this._publisher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._publisher.Entity = null;
						previousValue.pub_info = null;
					}
					this._publisher.Entity = value;
					if ((value != null))
					{
						value.pub_info = this;
						this._pub_id = value.pub_id;
					}
					else
					{
						this._pub_id = default(string);
					}
					this.SendPropertyChanged("publisher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.publishers")]
	public partial class publisher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _pub_id;
		
		private string _pub_name;
		
		private string _city;
		
		private string _state;
		
		private string _country;
		
		private EntitySet<title> _titles;
		
		private EntitySet<employee> _employees;
		
		private EntityRef<pub_info> _pub_info;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpub_idChanging(string value);
    partial void Onpub_idChanged();
    partial void Onpub_nameChanging(string value);
    partial void Onpub_nameChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    #endregion
		
		public publisher()
		{
			this._titles = new EntitySet<title>(new Action<title>(this.attach_titles), new Action<title>(this.detach_titles));
			this._employees = new EntitySet<employee>(new Action<employee>(this.attach_employees), new Action<employee>(this.detach_employees));
			this._pub_info = default(EntityRef<pub_info>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pub_id", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string pub_id
		{
			get
			{
				return this._pub_id;
			}
			set
			{
				if ((this._pub_id != value))
				{
					this.Onpub_idChanging(value);
					this.SendPropertyChanging();
					this._pub_id = value;
					this.SendPropertyChanged("pub_id");
					this.Onpub_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pub_name", DbType="VarChar(40)")]
		public string pub_name
		{
			get
			{
				return this._pub_name;
			}
			set
			{
				if ((this._pub_name != value))
				{
					this.Onpub_nameChanging(value);
					this.SendPropertyChanging();
					this._pub_name = value;
					this.SendPropertyChanged("pub_name");
					this.Onpub_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(20)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="Char(2)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="VarChar(30)")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="publisher_title", Storage="_titles", ThisKey="pub_id", OtherKey="pub_id")]
		public EntitySet<title> titles
		{
			get
			{
				return this._titles;
			}
			set
			{
				this._titles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="publisher_employee", Storage="_employees", ThisKey="pub_id", OtherKey="pub_id")]
		public EntitySet<employee> employees
		{
			get
			{
				return this._employees;
			}
			set
			{
				this._employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="publisher_pub_info", Storage="_pub_info", ThisKey="pub_id", OtherKey="pub_id", IsUnique=true, IsForeignKey=false)]
		public pub_info pub_info
		{
			get
			{
				return this._pub_info.Entity;
			}
			set
			{
				pub_info previousValue = this._pub_info.Entity;
				if (((previousValue != value) 
							|| (this._pub_info.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pub_info.Entity = null;
						previousValue.publisher = null;
					}
					this._pub_info.Entity = value;
					if ((value != null))
					{
						value.publisher = this;
					}
					this.SendPropertyChanged("pub_info");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_titles(title entity)
		{
			this.SendPropertyChanging();
			entity.publisher = this;
		}
		
		private void detach_titles(title entity)
		{
			this.SendPropertyChanging();
			entity.publisher = null;
		}
		
		private void attach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.publisher = this;
		}
		
		private void detach_employees(employee entity)
		{
			this.SendPropertyChanging();
			entity.publisher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.roysched")]
	public partial class roysched
	{
		
		private string _title_id;
		
		private System.Nullable<int> _lorange;
		
		private System.Nullable<int> _hirange;
		
		private System.Nullable<int> _royalty;
		
		public roysched()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title_id", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string title_id
		{
			get
			{
				return this._title_id;
			}
			set
			{
				if ((this._title_id != value))
				{
					this._title_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lorange", DbType="Int")]
		public System.Nullable<int> lorange
		{
			get
			{
				return this._lorange;
			}
			set
			{
				if ((this._lorange != value))
				{
					this._lorange = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hirange", DbType="Int")]
		public System.Nullable<int> hirange
		{
			get
			{
				return this._hirange;
			}
			set
			{
				if ((this._hirange != value))
				{
					this._hirange = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_royalty", DbType="Int")]
		public System.Nullable<int> royalty
		{
			get
			{
				return this._royalty;
			}
			set
			{
				if ((this._royalty != value))
				{
					this._royalty = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sales")]
	public partial class sale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _stor_id;
		
		private string _ord_num;
		
		private System.DateTime _ord_date;
		
		private short _qty;
		
		private string _payterms;
		
		private string _title_id;
		
		private EntityRef<title> _title;
		
		private EntityRef<store> _store;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstor_idChanging(string value);
    partial void Onstor_idChanged();
    partial void Onord_numChanging(string value);
    partial void Onord_numChanged();
    partial void Onord_dateChanging(System.DateTime value);
    partial void Onord_dateChanged();
    partial void OnqtyChanging(short value);
    partial void OnqtyChanged();
    partial void OnpaytermsChanging(string value);
    partial void OnpaytermsChanged();
    partial void Ontitle_idChanging(string value);
    partial void Ontitle_idChanged();
    #endregion
		
		public sale()
		{
			this._title = default(EntityRef<title>);
			this._store = default(EntityRef<store>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stor_id", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string stor_id
		{
			get
			{
				return this._stor_id;
			}
			set
			{
				if ((this._stor_id != value))
				{
					if (this._store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstor_idChanging(value);
					this.SendPropertyChanging();
					this._stor_id = value;
					this.SendPropertyChanged("stor_id");
					this.Onstor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ord_num", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ord_num
		{
			get
			{
				return this._ord_num;
			}
			set
			{
				if ((this._ord_num != value))
				{
					this.Onord_numChanging(value);
					this.SendPropertyChanging();
					this._ord_num = value;
					this.SendPropertyChanged("ord_num");
					this.Onord_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ord_date", DbType="DateTime NOT NULL")]
		public System.DateTime ord_date
		{
			get
			{
				return this._ord_date;
			}
			set
			{
				if ((this._ord_date != value))
				{
					this.Onord_dateChanging(value);
					this.SendPropertyChanging();
					this._ord_date = value;
					this.SendPropertyChanged("ord_date");
					this.Onord_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qty", DbType="SmallInt NOT NULL")]
		public short qty
		{
			get
			{
				return this._qty;
			}
			set
			{
				if ((this._qty != value))
				{
					this.OnqtyChanging(value);
					this.SendPropertyChanging();
					this._qty = value;
					this.SendPropertyChanged("qty");
					this.OnqtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payterms", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string payterms
		{
			get
			{
				return this._payterms;
			}
			set
			{
				if ((this._payterms != value))
				{
					this.OnpaytermsChanging(value);
					this.SendPropertyChanging();
					this._payterms = value;
					this.SendPropertyChanged("payterms");
					this.OnpaytermsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title_id", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string title_id
		{
			get
			{
				return this._title_id;
			}
			set
			{
				if ((this._title_id != value))
				{
					if (this._title.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontitle_idChanging(value);
					this.SendPropertyChanging();
					this._title_id = value;
					this.SendPropertyChanged("title_id");
					this.Ontitle_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="title_sale", Storage="_title", ThisKey="title_id", OtherKey="title_id", IsForeignKey=true)]
		public title title
		{
			get
			{
				return this._title.Entity;
			}
			set
			{
				title previousValue = this._title.Entity;
				if (((previousValue != value) 
							|| (this._title.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._title.Entity = null;
						previousValue.sales.Remove(this);
					}
					this._title.Entity = value;
					if ((value != null))
					{
						value.sales.Add(this);
						this._title_id = value.title_id;
					}
					else
					{
						this._title_id = default(string);
					}
					this.SendPropertyChanged("title");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="store_sale", Storage="_store", ThisKey="stor_id", OtherKey="stor_id", IsForeignKey=true)]
		public store store
		{
			get
			{
				return this._store.Entity;
			}
			set
			{
				store previousValue = this._store.Entity;
				if (((previousValue != value) 
							|| (this._store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._store.Entity = null;
						previousValue.sales.Remove(this);
					}
					this._store.Entity = value;
					if ((value != null))
					{
						value.sales.Add(this);
						this._stor_id = value.stor_id;
					}
					else
					{
						this._stor_id = default(string);
					}
					this.SendPropertyChanged("store");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.stores")]
	public partial class store : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _stor_id;
		
		private string _stor_name;
		
		private string _stor_address;
		
		private string _city;
		
		private string _state;
		
		private string _zip;
		
		private EntitySet<sale> _sales;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstor_idChanging(string value);
    partial void Onstor_idChanged();
    partial void Onstor_nameChanging(string value);
    partial void Onstor_nameChanged();
    partial void Onstor_addressChanging(string value);
    partial void Onstor_addressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OnzipChanging(string value);
    partial void OnzipChanged();
    #endregion
		
		public store()
		{
			this._sales = new EntitySet<sale>(new Action<sale>(this.attach_sales), new Action<sale>(this.detach_sales));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stor_id", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string stor_id
		{
			get
			{
				return this._stor_id;
			}
			set
			{
				if ((this._stor_id != value))
				{
					this.Onstor_idChanging(value);
					this.SendPropertyChanging();
					this._stor_id = value;
					this.SendPropertyChanged("stor_id");
					this.Onstor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stor_name", DbType="VarChar(40)")]
		public string stor_name
		{
			get
			{
				return this._stor_name;
			}
			set
			{
				if ((this._stor_name != value))
				{
					this.Onstor_nameChanging(value);
					this.SendPropertyChanging();
					this._stor_name = value;
					this.SendPropertyChanged("stor_name");
					this.Onstor_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stor_address", DbType="VarChar(40)")]
		public string stor_address
		{
			get
			{
				return this._stor_address;
			}
			set
			{
				if ((this._stor_address != value))
				{
					this.Onstor_addressChanging(value);
					this.SendPropertyChanging();
					this._stor_address = value;
					this.SendPropertyChanged("stor_address");
					this.Onstor_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(20)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="Char(2)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zip", DbType="Char(5)")]
		public string zip
		{
			get
			{
				return this._zip;
			}
			set
			{
				if ((this._zip != value))
				{
					this.OnzipChanging(value);
					this.SendPropertyChanging();
					this._zip = value;
					this.SendPropertyChanged("zip");
					this.OnzipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="store_sale", Storage="_sales", ThisKey="stor_id", OtherKey="stor_id")]
		public EntitySet<sale> sales
		{
			get
			{
				return this._sales;
			}
			set
			{
				this._sales.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_sales(sale entity)
		{
			this.SendPropertyChanging();
			entity.store = this;
		}
		
		private void detach_sales(sale entity)
		{
			this.SendPropertyChanging();
			entity.store = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.titleauthor")]
	public partial class titleauthor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _au_id;
		
		private string _title_id;
		
		private System.Nullable<byte> _au_ord;
		
		private System.Nullable<int> _royaltyper;
		
		private EntityRef<author> _author;
		
		private EntityRef<title> _title;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onau_idChanging(string value);
    partial void Onau_idChanged();
    partial void Ontitle_idChanging(string value);
    partial void Ontitle_idChanged();
    partial void Onau_ordChanging(System.Nullable<byte> value);
    partial void Onau_ordChanged();
    partial void OnroyaltyperChanging(System.Nullable<int> value);
    partial void OnroyaltyperChanged();
    #endregion
		
		public titleauthor()
		{
			this._author = default(EntityRef<author>);
			this._title = default(EntityRef<title>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_au_id", DbType="VarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string au_id
		{
			get
			{
				return this._au_id;
			}
			set
			{
				if ((this._au_id != value))
				{
					if (this._author.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onau_idChanging(value);
					this.SendPropertyChanging();
					this._au_id = value;
					this.SendPropertyChanged("au_id");
					this.Onau_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title_id", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string title_id
		{
			get
			{
				return this._title_id;
			}
			set
			{
				if ((this._title_id != value))
				{
					if (this._title.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontitle_idChanging(value);
					this.SendPropertyChanging();
					this._title_id = value;
					this.SendPropertyChanged("title_id");
					this.Ontitle_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_au_ord", DbType="TinyInt")]
		public System.Nullable<byte> au_ord
		{
			get
			{
				return this._au_ord;
			}
			set
			{
				if ((this._au_ord != value))
				{
					this.Onau_ordChanging(value);
					this.SendPropertyChanging();
					this._au_ord = value;
					this.SendPropertyChanged("au_ord");
					this.Onau_ordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_royaltyper", DbType="Int")]
		public System.Nullable<int> royaltyper
		{
			get
			{
				return this._royaltyper;
			}
			set
			{
				if ((this._royaltyper != value))
				{
					this.OnroyaltyperChanging(value);
					this.SendPropertyChanging();
					this._royaltyper = value;
					this.SendPropertyChanged("royaltyper");
					this.OnroyaltyperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="author_titleauthor", Storage="_author", ThisKey="au_id", OtherKey="au_id", IsForeignKey=true)]
		public author author
		{
			get
			{
				return this._author.Entity;
			}
			set
			{
				author previousValue = this._author.Entity;
				if (((previousValue != value) 
							|| (this._author.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._author.Entity = null;
						previousValue.titleauthors.Remove(this);
					}
					this._author.Entity = value;
					if ((value != null))
					{
						value.titleauthors.Add(this);
						this._au_id = value.au_id;
					}
					else
					{
						this._au_id = default(string);
					}
					this.SendPropertyChanged("author");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="title_titleauthor", Storage="_title", ThisKey="title_id", OtherKey="title_id", IsForeignKey=true)]
		public title title
		{
			get
			{
				return this._title.Entity;
			}
			set
			{
				title previousValue = this._title.Entity;
				if (((previousValue != value) 
							|| (this._title.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._title.Entity = null;
						previousValue.titleauthors.Remove(this);
					}
					this._title.Entity = value;
					if ((value != null))
					{
						value.titleauthors.Add(this);
						this._title_id = value.title_id;
					}
					else
					{
						this._title_id = default(string);
					}
					this.SendPropertyChanged("title");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
